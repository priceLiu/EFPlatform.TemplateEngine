using System;
using System.Collections.Generic;
using System.Text;

namespace EFPlatform.TemplateEngine
{
	public class Generator
	{
		private string template;
		private SegmentCollection segments;
		
		public string Template
		{
			get { return template; }
			set { template = value; }
		}

		public SegmentCollection Segments
		{
			get { return segments; }
			set { segments = value; }
		}

		private static readonly string copyright = "<!--Generated by EFPlatform.TemplateEngine({0:yyyy-MM-dd HH:mm:ss})-->\n";

		public Generator() : this(null) { }

		public Generator(string template)
		{
			this.template = template;
		}

		public void ParseTemplate()
		{
			if(string.IsNullOrEmpty(this.template))
			{
				throw new Exception("No template was assigned.");
			}

			this.segments = TemplateParser.GetRegions(this.template);
		}

		public Region GetRegion(string regionName)
		{
			return this.segments[regionName] as Region;
		}

		public string Generate()
		{
			StringBuilder builder = new StringBuilder(0xFFFF);
			builder.AppendFormat(copyright, DateTime.Now);

			foreach(ISegment segment in this.segments)
			{
				segment.GetData(builder);
			}

			return builder.ToString();
		}
	}
}
